{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"api-documentation/","title":"Overview","text":"<p>The api is a centralized and contained system for managing the needs of a single client (business) , in the future we will be working towards making it into a full Saas where having a new user for the system doesn't require the deployment of a new instance of the server to achieve it rather  We have in this system two entities, employees and attendances .</p>"},{"location":"api-documentation/#notes","title":"Notes","text":"<ul> <li>Notice that the update endpoints use <code>POST</code> method instead of <code>PATCH</code> or <code>PUT</code> and that is because of a 'flaw' in php as it is unable to automatically parse incoming request body when the method is other than <code>POST</code> , Laravel framework implemented a workaround this by using a <code>POST</code> request and using a magic string within the request body that specifies that it actually is a <code>PUT</code> request, click here for more info.</li> </ul>"},{"location":"api-documentation/#format-specification","title":"Format specification","text":"<p>All requests that have a body require a content-type of multipart/form-data , and the response of all requests (with or without a body) have content type application/json , ==if an endpoint doesn't follow this format then it will be specified==. For the responses that are the same for all endpoints such as server errors <code>500</code> will not be specified here but rather in the exhaustive endpoints page here</p>"},{"location":"api-documentation/#employee-management","title":"Employee management","text":"<p>For the employees we have a list of endpoints here, and here we will provide the  workflow and details about the usage of these endpoints : </p>"},{"location":"api-documentation/#1-create-en-employee","title":"**1. Create en employee","text":"<p>The first functionality we will see is that of employee creation :</p>"},{"location":"api-documentation/#endpoint","title":"Endpoint :","text":"<pre><code>POST /employee\n</code></pre>"},{"location":"api-documentation/#request-body","title":"Request body :","text":"<pre><code>name : String\nsalary : Float\n</code></pre>"},{"location":"api-documentation/#responses","title":"Responses :","text":"<ol> <li>Success <code>200 OK</code></li> </ol> <pre><code>{\n\n    \"success\": true,\n\n    \"message\": \"Employee created successfully\"\n\n}\n</code></pre> <ol> <li>Validation Error <code>400 Bad Request</code></li> <li>Server Error <code>500 Internal Server Error</code></li> </ol>"},{"location":"api-documentation/#2-get-an-employee-by-id","title":"2. Get an employee by ID","text":""},{"location":"api-documentation/#endpoint_1","title":"Endpoint :","text":"<pre><code>GET /employee/{id}\n</code></pre>"},{"location":"api-documentation/#responses_1","title":"Responses :","text":"<ol> <li>Success <code>200 OK</code></li> </ol> <pre><code>{\n\n\u00a0 \u00a0 \"success\": true,\n\n\u00a0 \u00a0 \"data\": {\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"id\": 1,\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"hydrion\",\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"salary\": 35000,\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"created_at\": null,\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"updated_at\": null\n\n\u00a0 \u00a0 }\n\n}\n</code></pre> <ol> <li>Employee not found <code>404 Not Found</code></li> </ol> <pre><code>{\n\n\u00a0 \u00a0 \"success\": false,\n\n\u00a0 \u00a0 \"message\": \"Employee not found\"\n\n}\n</code></pre> <ol> <li>Server Error <code>500 Internal Server Error</code></li> </ol>"},{"location":"api-documentation/#3-get-all-employees","title":"3. Get all employees","text":""},{"location":"api-documentation/#endpoint_2","title":"Endpoint :","text":"<pre><code>GET /employee\n</code></pre>"},{"location":"api-documentation/#responses_2","title":"Responses :","text":"<ol> <li>Success <code>200 OK</code> <code>data</code> holds an array of employees</li> </ol> <pre><code>{\n\n\u00a0 \u00a0 \"success\": true,\n\n\u00a0 \u00a0 \"data\": [\n\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"id\": 1,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"hydrion\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"salary\": 35000,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"created_at\": null,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"updated_at\": null\n\u00a0 \u00a0 \u00a0 \u00a0 },\n\u00a0 \u00a0 \u00a0 \u00a0 {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"id\": 2,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"sarpedon\",\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"salary\": 787878,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"created_at\": null,\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"updated_at\": null\n\u00a0 \u00a0 \u00a0 \u00a0 } ...\n            ]\n}\n</code></pre> <ol> <li>Server Error <code>500 Internal Server Error</code></li> </ol>"},{"location":"api-documentation/#4-update-an-employee","title":"4. Update an employee","text":""},{"location":"api-documentation/#endpoint_3","title":"Endpoint :","text":"<pre><code>POST /employee/{id}\n</code></pre>"},{"location":"api-documentation/#request-body_1","title":"Request body :","text":"<pre><code>name : String\nsalary : Float\n</code></pre>"},{"location":"api-documentation/#responses_3","title":"Responses :","text":"<ol> <li>Update Successful <code>200 OK</code></li> </ol> <pre><code>{\n\n\u00a0 \u00a0 \"success\": true,\n\n\u00a0 \u00a0 \"data\": {\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"id\": 1,\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"hydrion\",\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"salary\": \"35000\",\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"created_at\": null,\n\n\u00a0 \u00a0 \u00a0 \u00a0 \"updated_at\": null\n\n\u00a0 \u00a0 }\n\n}\n</code></pre> <ol> <li>Employee not found <code>404  Not Found</code></li> <li>Server Error <code>500 Internal Server Error</code></li> <li>Validation Error <code>400 Bad Request</code></li> </ol>"},{"location":"api-documentation/#5-delete-an-employee","title":"5. Delete an employee","text":""},{"location":"api-documentation/#endpoint_4","title":"Endpoint :","text":"<pre><code>DELETE /employee/{id}\n</code></pre>"},{"location":"api-documentation/#responses_4","title":"Responses :","text":"<ol> <li>Delete Successful <code>200 OK</code></li> </ol> <pre><code>{\n\u00a0 \u00a0 \"success\": true,\n\u00a0 \u00a0 \"message\": \"Employee deleted successfully\"\n}\n</code></pre> <ol> <li>Employee not found <code>404  Not Found</code></li> <li>Server Error <code>500 Internal Server Error</code></li> </ol>"},{"location":"api-documentation/#attendance-management","title":"Attendance management","text":""},{"location":"endpoints/","title":"employees","text":"<ol> <li>Validation Error <code>400 Bad Request</code>, where <code>${fieldName}</code> is the name of the field on which validation failed  ```json {</li> </ol> <p>\"success\": false,</p> <p>\"message\": \"Validation failed\",</p> <p>\"errors\": \"Valeur invalide pour '${fieldName}'.\"</p> <p>}</p>"}]}